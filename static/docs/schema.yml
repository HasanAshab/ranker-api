openapi: 3.0.3
info:
  title: Ranker
  version: 1.0.0
  description: The api documentation of Ranker-API
paths:
  /api/account/:
    get:
      operationId: account_retrieve
      tags:
      - account
      security:
      - knoxApiToken: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  links:
                    allOf:
                    - $ref: '#/components/schemas/UserAvatarLink'
                    readOnly: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        readOnly: true
                      email:
                        type: string
                        format: email
                        readOnly: true
                        title: Email address
                      is_email_verified:
                        type: boolean
                        readOnly: true
                      username:
                        type: string
                        description: Required. 35 characters or fewer.Letters, digits
                          and @/./+/-/_ only.
                        pattern: ^[\w.@+-]+$
                        maxLength: 35
                      name:
                        type: string
                        description: Name of the user
                        maxLength: 255
                      gender:
                        allOf:
                        - $ref: '#/components/schemas/GenderEnum'
                        description: |-
                          Gender of the user

                          * `M` - Male
                          * `F` - Female
                      phone_number:
                        type: string
                        readOnly: true
                        description: Phone number of the user
                      avatar:
                        type: string
                        format: uri
                        writeOnly: true
                        description: Avatar (or profile pic) of the user
                      date_joined:
                        type: string
                        format: date-time
                        readOnly: true
                      is_superuser:
                        type: boolean
                        readOnly: true
                        title: Superuser status
                        description: Designates that this user has all permissions
                          without explicitly assigning them.
                      is_staff:
                        type: boolean
                        readOnly: true
                        title: Staff status
                        description: Designates whether the user can log into this
                          admin site.
                      total_xp:
                        type: integer
                        readOnly: true
                        description: Total xp points of the user
                      level:
                        type: integer
                        readOnly: true
                      level_title:
                        allOf:
                        - $ref: '#/components/schemas/LevelTitle'
                        readOnly: true
                      rank:
                        type: integer
                        readOnly: true
                        description: Global rank of the user
                    required:
                    - date_joined
                    - email
                    - id
                    - is_email_verified
                    - is_staff
                    - is_superuser
                    - level
                    - level_title
                    - links
                    - phone_number
                    - rank
                    - total_xp
                    - username
          description: ''
    put:
      operationId: account_update
      tags:
      - account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountUpdateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  links: null
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        readOnly: true
                      email:
                        type: string
                        format: email
                        readOnly: true
                        title: Email address
                      is_email_verified:
                        type: boolean
                        readOnly: true
                      username:
                        type: string
                        description: Required. 35 characters or fewer.Letters, digits
                          and @/./+/-/_ only.
                        pattern: ^[\w.@+-]+$
                        maxLength: 35
                      name:
                        type: string
                        description: Name of the user
                        maxLength: 255
                      gender:
                        allOf:
                        - $ref: '#/components/schemas/GenderEnum'
                        description: |-
                          Gender of the user

                          * `M` - Male
                          * `F` - Female
                      phone_number:
                        type: string
                        readOnly: true
                        description: Phone number of the user
                      avatar:
                        type: string
                        format: uri
                        writeOnly: true
                        description: Avatar (or profile pic) of the user
                      date_joined:
                        type: string
                        format: date-time
                        readOnly: true
                      is_superuser:
                        type: boolean
                        readOnly: true
                        title: Superuser status
                        description: Designates that this user has all permissions
                          without explicitly assigning them.
                      is_staff:
                        type: boolean
                        readOnly: true
                        title: Staff status
                        description: Designates whether the user can log into this
                          admin site.
                      total_xp:
                        type: integer
                        readOnly: true
                        description: Total xp points of the user
                      level:
                        type: integer
                        readOnly: true
                      level_title:
                        allOf:
                        - $ref: '#/components/schemas/LevelTitle'
                        readOnly: true
                      rank:
                        type: integer
                        readOnly: true
                        description: Global rank of the user
                    required:
                    - date_joined
                    - email
                    - id
                    - is_email_verified
                    - is_staff
                    - is_superuser
                    - level
                    - level_title
                    - links
                    - phone_number
                    - rank
                    - total_xp
                    - username
          description: ''
    patch:
      operationId: account_partial_update
      tags:
      - account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
      security:
      - knoxApiToken: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountPartialUpdateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  links: null
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        readOnly: true
                      email:
                        type: string
                        format: email
                        readOnly: true
                        title: Email address
                      is_email_verified:
                        type: boolean
                        readOnly: true
                      username:
                        type: string
                        description: Required. 35 characters or fewer.Letters, digits
                          and @/./+/-/_ only.
                        pattern: ^[\w.@+-]+$
                        maxLength: 35
                      name:
                        type: string
                        description: Name of the user
                        maxLength: 255
                      gender:
                        allOf:
                        - $ref: '#/components/schemas/GenderEnum'
                        description: |-
                          Gender of the user

                          * `M` - Male
                          * `F` - Female
                      phone_number:
                        type: string
                        readOnly: true
                        description: Phone number of the user
                      avatar:
                        type: string
                        format: uri
                        writeOnly: true
                        description: Avatar (or profile pic) of the user
                      date_joined:
                        type: string
                        format: date-time
                        readOnly: true
                      is_superuser:
                        type: boolean
                        readOnly: true
                        title: Superuser status
                        description: Designates that this user has all permissions
                          without explicitly assigning them.
                      is_staff:
                        type: boolean
                        readOnly: true
                        title: Staff status
                        description: Designates whether the user can log into this
                          admin site.
                      total_xp:
                        type: integer
                        readOnly: true
                        description: Total xp points of the user
                      level:
                        type: integer
                        readOnly: true
                      level_title:
                        allOf:
                        - $ref: '#/components/schemas/LevelTitle'
                        readOnly: true
                      rank:
                        type: integer
                        readOnly: true
                        description: Global rank of the user
                    required:
                    - date_joined
                    - email
                    - id
                    - is_email_verified
                    - is_staff
                    - is_superuser
                    - level
                    - level_title
                    - links
                    - phone_number
                    - rank
                    - total_xp
                    - username
          description: ''
    delete:
      operationId: account_destroy
      tags:
      - account
      security:
      - knoxApiToken: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDestroyErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/account/phone_number/:
    patch:
      operationId: account_phone_number_partial_update
      tags:
      - account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPhoneNumber'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPhoneNumber'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPhoneNumber'
      security:
      - knoxApiToken: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountPhoneNumberPartialUpdateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'
          description: ''
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'
          description: Verification code sent to the phone number
    delete:
      operationId: account_phone_number_destroy
      tags:
      - account
      security:
      - knoxApiToken: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountPhoneNumberDestroyErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/account/suggest-username/:
    get:
      operationId: account_suggest_username_retrieve
      parameters:
      - in: query
        name: max_suggestions
        schema:
          type: integer
          maximum: 3
          default: 3
      - in: query
        name: prefix
        schema:
          type: string
          minLength: 1
      tags:
      - account
      security:
      - knoxApiToken: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSuggestUsernameRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestUsername'
          description: ''
  /api/auth/token/login/:
    post:
      operationId: auth_token_login_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenLogin'
        required: true
      security:
      - knoxApiToken: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenLoginCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  links: null
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                    required:
                    - token
          description: ''
  /api/auth/token/sse/:
    get:
      operationId: auth_token_sse_retrieve
      tags:
      - auth
      security:
      - knoxApiToken: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenSseRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  links: null
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                    required:
                    - token
          description: ''
  /api/challenges/:
    get:
      operationId: challenges_list
      parameters:
      - in: query
        name: difficulty
        schema:
          type: integer
      - in: query
        name: due_date
        schema:
          type: boolean
      - in: query
        name: is_pinned
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: ordering
        schema:
          type: string
          enum:
          - difficulty
          - ordered
        description: |-
          * `ordered` - Ordered
          * `difficulty` - Difficulty
      - in: query
        name: repeat_type
        schema:
          type: string
          enum:
          - D
          - M
          - O
          - W
        description: |-
          How often the challenge repeats.

          * `O` - One time Only
          * `D` - Daily
          * `W` - Weekly
          * `M` - Monthly
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - challenges
      security:
      - knoxApiToken: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengesListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedChallengeList'
                - type: object
                  properties:
                    success:
                      type: boolean
                    message:
                      type: string
          description: ''
    post:
      operationId: challenges_create
      tags:
      - challenges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Challenge'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Challenge'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Challenge'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengesCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '201':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Challenge'
                - type: object
                  properties:
                    success:
                      type: boolean
                    message:
                      type: string
          description: ''
  /api/challenges/{id}/:
    get:
      operationId: challenges_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - challenges
      security:
      - knoxApiToken: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengesRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  links: null
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        readOnly: true
                      title:
                        type: string
                        description: Title of the challenge.
                        maxLength: 50
                      status:
                        allOf:
                        - $ref: '#/components/schemas/StatusEnum'
                        description: |-
                          Status of the challenge.

                          * `active` - Active
                          * `completed` - Completed
                          * `failed` - Failed
                      repeat_type:
                        allOf:
                        - $ref: '#/components/schemas/RepeatTypeEnum'
                        description: |-
                          How often the challenge repeats.

                          * `O` - One time Only
                          * `D` - Daily
                          * `W` - Weekly
                          * `M` - Monthly
                      is_pinned:
                        type: boolean
                        description: Whether the challenge is pinned.
                      due_date:
                        type: string
                        format: date-time
                        nullable: true
                        description: Due date to complete the challenge.
                      difficulty:
                        $ref: '#/components/schemas/ChallengeDifficulty'
                      order:
                        type: integer
                        maximum: 9223372036854775807
                        minimum: -9223372036854775808
                        format: int64
                        description: Priority order of the challenge.
                    required:
                    - difficulty
                    - id
                    - title
          description: ''
    put:
      operationId: challenges_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - challenges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Challenge'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Challenge'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Challenge'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengesUpdateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  links: null
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        readOnly: true
                      title:
                        type: string
                        description: Title of the challenge.
                        maxLength: 50
                      status:
                        allOf:
                        - $ref: '#/components/schemas/StatusEnum'
                        description: |-
                          Status of the challenge.

                          * `active` - Active
                          * `completed` - Completed
                          * `failed` - Failed
                      repeat_type:
                        allOf:
                        - $ref: '#/components/schemas/RepeatTypeEnum'
                        description: |-
                          How often the challenge repeats.

                          * `O` - One time Only
                          * `D` - Daily
                          * `W` - Weekly
                          * `M` - Monthly
                      is_pinned:
                        type: boolean
                        description: Whether the challenge is pinned.
                      due_date:
                        type: string
                        format: date-time
                        nullable: true
                        description: Due date to complete the challenge.
                      difficulty:
                        $ref: '#/components/schemas/ChallengeDifficulty'
                      order:
                        type: integer
                        maximum: 9223372036854775807
                        minimum: -9223372036854775808
                        format: int64
                        description: Priority order of the challenge.
                    required:
                    - difficulty
                    - id
                    - title
          description: ''
    patch:
      operationId: challenges_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - challenges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChallenge'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChallenge'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChallenge'
      security:
      - knoxApiToken: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengesPartialUpdateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  links: null
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        readOnly: true
                      title:
                        type: string
                        description: Title of the challenge.
                        maxLength: 50
                      status:
                        allOf:
                        - $ref: '#/components/schemas/StatusEnum'
                        description: |-
                          Status of the challenge.

                          * `active` - Active
                          * `completed` - Completed
                          * `failed` - Failed
                      repeat_type:
                        allOf:
                        - $ref: '#/components/schemas/RepeatTypeEnum'
                        description: |-
                          How often the challenge repeats.

                          * `O` - One time Only
                          * `D` - Daily
                          * `W` - Weekly
                          * `M` - Monthly
                      is_pinned:
                        type: boolean
                        description: Whether the challenge is pinned.
                      due_date:
                        type: string
                        format: date-time
                        nullable: true
                        description: Due date to complete the challenge.
                      difficulty:
                        $ref: '#/components/schemas/ChallengeDifficulty'
                      order:
                        type: integer
                        maximum: 9223372036854775807
                        minimum: -9223372036854775808
                        format: int64
                        description: Priority order of the challenge.
                    required:
                    - difficulty
                    - id
                    - title
          description: ''
    delete:
      operationId: challenges_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - challenges
      security:
      - knoxApiToken: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengesDestroyErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/challenges/{id}/steps/:
    get:
      operationId: challenges_steps_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - challenges
      security:
      - knoxApiToken: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengesStepsListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ChallengeStep'
          description: ''
    post:
      operationId: challenges_steps_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - challenges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChallengeStep'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChallengeStep'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChallengeStep'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengesStepsCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '201':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  links: null
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        readOnly: true
                      title:
                        type: string
                        description: Title of the step.
                        maxLength: 50
                      is_completed:
                        type: boolean
                        title: Completed
                        description: Whether the step is completed.
                      order:
                        type: integer
                        maximum: 9223372036854775807
                        minimum: -9223372036854775808
                        format: int64
                        description: Priority order of the step.
                    required:
                    - id
                    - title
          description: ''
  /api/challenges/{id}/steps/{step_pk}/:
    get:
      operationId: challenges_steps_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: step_pk
        schema:
          type: integer
        required: true
      tags:
      - challenges
      security:
      - knoxApiToken: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengesStepsRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  links: null
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        readOnly: true
                      title:
                        type: string
                        description: Title of the step.
                        maxLength: 50
                      is_completed:
                        type: boolean
                        title: Completed
                        description: Whether the step is completed.
                      order:
                        type: integer
                        maximum: 9223372036854775807
                        minimum: -9223372036854775808
                        format: int64
                        description: Priority order of the step.
                    required:
                    - id
                    - title
          description: ''
    put:
      operationId: challenges_steps_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: step_pk
        schema:
          type: integer
        required: true
      tags:
      - challenges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChallengeStep'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChallengeStep'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChallengeStep'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengesStepsUpdateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  links: null
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        readOnly: true
                      title:
                        type: string
                        description: Title of the step.
                        maxLength: 50
                      is_completed:
                        type: boolean
                        title: Completed
                        description: Whether the step is completed.
                      order:
                        type: integer
                        maximum: 9223372036854775807
                        minimum: -9223372036854775808
                        format: int64
                        description: Priority order of the step.
                    required:
                    - id
                    - title
          description: ''
    patch:
      operationId: challenges_steps_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: step_pk
        schema:
          type: integer
        required: true
      tags:
      - challenges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChallengeStep'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChallengeStep'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChallengeStep'
      security:
      - knoxApiToken: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengesStepsPartialUpdateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  links: null
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        readOnly: true
                      title:
                        type: string
                        description: Title of the step.
                        maxLength: 50
                      is_completed:
                        type: boolean
                        title: Completed
                        description: Whether the step is completed.
                      order:
                        type: integer
                        maximum: 9223372036854775807
                        minimum: -9223372036854775808
                        format: int64
                        description: Priority order of the step.
                    required:
                    - id
                    - title
          description: ''
    delete:
      operationId: challenges_steps_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: step_pk
        schema:
          type: integer
        required: true
      tags:
      - challenges
      security:
      - knoxApiToken: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengesStepsDestroyErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/challenges/{id}/steps/generation/:
    post:
      operationId: challenges_steps_generation_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - challenges
      security:
      - knoxApiToken: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengesStepsGenerationCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '201':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ChallengeStep'
          description: ''
  /api/challenges/{id}/steps/order/:
    patch:
      operationId: challenges_steps_order_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - challenges
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ReOrdering'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ReOrdering'
          multipart/form-data:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ReOrdering'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengesStepsOrderPartialUpdateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'
          description: ''
  /api/challenges/activities/:
    get:
      operationId: challenges_activities_retrieve
      tags:
      - challenges
      security:
      - knoxApiToken: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengesActivitiesRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  links: null
                  data:
                    type: object
                    properties:
                      total:
                        type: integer
                      failed:
                        type: integer
                      completed:
                        $ref: '#/components/schemas/CompletedChallengeActivities'
                    required:
                    - completed
                    - failed
                    - total
          description: ''
  /api/challenges/order/:
    patch:
      operationId: challenges_order_partial_update
      tags:
      - challenges
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ReOrdering'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ReOrdering'
          multipart/form-data:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ReOrdering'
        required: true
      security:
      - knoxApiToken: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengesOrderPartialUpdateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'
          description: ''
  /api/difficulties/:
    get:
      operationId: difficulties_list
      tags:
      - difficulties
      security:
      - knoxApiToken: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DifficultiesListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Difficulty'
          description: ''
  /api/difficulties/{id}/:
    get:
      operationId: difficulties_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - difficulties
      security:
      - knoxApiToken: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DifficultiesRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  links: null
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        readOnly: true
                      name:
                        type: string
                        description: The display name of the difficulty level.
                        maxLength: 30
                      slug:
                        type: string
                        description: The slugyfied version of the difficulty name.
                        maxLength: 30
                        pattern: ^[-a-zA-Z0-9_]+$
                      light_color:
                        type: string
                        title: Ligth Color
                        description: The display color for ligth theme.
                        pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
                        maxLength: 25
                      dark_color:
                        type: string
                        description: The display color for dark theme.
                        pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
                        maxLength: 25
                      xp_value:
                        type: integer
                        maximum: 9223372036854775807
                        minimum: 0
                        format: int64
                        description: Number of xp value associated with this difficulty
                          level.
                      xp_penalty:
                        type: integer
                        maximum: 9223372036854775807
                        minimum: 0
                        format: int64
                        description: The amount of XP deducted whena challenge of
                          this difficulty is failed.
                    required:
                    - id
                    - name
                    - slug
                    - xp_penalty
                    - xp_value
          description: ''
  /api/level-titles/:
    get:
      operationId: level_titles_list
      tags:
      - level-titles
      security:
      - knoxApiToken: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelTitlesListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/LevelTitleList'
          description: ''
  /api/recent-searches/:
    get:
      operationId: recent_searches_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      tags:
      - recent-searches
      security:
      - knoxApiToken: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecentSearchesListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedRecentUserSearchListList'
                - type: object
                  properties:
                    success:
                      type: boolean
                    message:
                      type: string
          description: ''
    delete:
      operationId: recent_searches_destroy_all
      tags:
      - recent-searches
      security:
      - knoxApiToken: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecentSearchesDestroyAllErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/recent-searches/{id}/:
    delete:
      operationId: recent_searches_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - recent-searches
      security:
      - knoxApiToken: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecentSearchesDestroyErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/users/:
    get:
      operationId: users_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - users
      security:
      - knoxApiToken: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedUserListList'
                - type: object
                  properties:
                    success:
                      type: boolean
                    message:
                      type: string
          description: ''
  /api/users/{username}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - knoxApiToken: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: You do not have permission to perform this action.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  links:
                    allOf:
                    - $ref: '#/components/schemas/UserAvatarLink'
                    readOnly: true
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        readOnly: true
                      username:
                        type: string
                        description: Required. 35 characters or fewer.Letters, digits
                          and @/./+/-/_ only.
                        pattern: ^[\w.@+-]+$
                        maxLength: 35
                      name:
                        type: string
                        description: Name of the user
                        maxLength: 255
                      gender:
                        allOf:
                        - $ref: '#/components/schemas/GenderEnum'
                        description: |-
                          Gender of the user

                          * `M` - Male
                          * `F` - Female
                      avatar:
                        type: string
                        format: uri
                        description: Avatar (or profile pic) of the user
                      date_joined:
                        type: string
                        format: date-time
                      is_superuser:
                        type: boolean
                        title: Superuser status
                        description: Designates that this user has all permissions
                          without explicitly assigning them.
                      is_staff:
                        type: boolean
                        title: Staff status
                        description: Designates whether the user can log into this
                          admin site.
                      total_xp:
                        type: integer
                        maximum: 9223372036854775807
                        minimum: 0
                        format: int64
                        description: Total xp points of the user
                      level:
                        type: integer
                        readOnly: true
                      level_title:
                        $ref: '#/components/schemas/LevelTitle'
                      rank:
                        type: integer
                        maximum: 9223372036854775807
                        minimum: 0
                        format: int64
                        description: Global rank of the user
                    required:
                    - id
                    - level
                    - level_title
                    - links
                    - rank
                    - username
          description: ''
    delete:
      operationId: users_destroy
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - knoxApiToken: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersDestroyErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: You do not have permission to perform this action.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Method "get" not allowed.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Could not satisfy the request Accept header.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Unsupported media type "application/json" in request.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: A server error occurred.
                      attr: null
          description: ''
        '204':
          description: No response body
components:
  schemas:
    AccountDestroyErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    AccountPartialUpdateAvatarErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - avatar
          type: string
          description: '* `avatar` - avatar'
        code:
          enum:
          - empty
          - invalid
          - invalid_image
          - max_length
          - no_name
          - 'null'
          type: string
          description: |-
            * `empty` - empty
            * `invalid` - invalid
            * `invalid_image` - invalid_image
            * `max_length` - max_length
            * `no_name` - no_name
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    AccountPartialUpdateError:
      oneOf:
      - $ref: '#/components/schemas/AccountPartialUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/AccountPartialUpdateUsernameErrorComponent'
      - $ref: '#/components/schemas/AccountPartialUpdateNameErrorComponent'
      - $ref: '#/components/schemas/AccountPartialUpdateGenderErrorComponent'
      - $ref: '#/components/schemas/AccountPartialUpdateAvatarErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/AccountPartialUpdateNonFieldErrorsErrorComponent'
          username: '#/components/schemas/AccountPartialUpdateUsernameErrorComponent'
          name: '#/components/schemas/AccountPartialUpdateNameErrorComponent'
          gender: '#/components/schemas/AccountPartialUpdateGenderErrorComponent'
          avatar: '#/components/schemas/AccountPartialUpdateAvatarErrorComponent'
    AccountPartialUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/AccountPartialUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/AccountPartialUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    AccountPartialUpdateGenderErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - gender
          type: string
          description: '* `gender` - gender'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    AccountPartialUpdateNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    AccountPartialUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    AccountPartialUpdateUsernameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - username
          type: string
          description: '* `username` - username'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    AccountPartialUpdateValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/AccountPartialUpdateError'
      required:
      - errors
      - type
    AccountPhoneNumberDestroyErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    AccountPhoneNumberPartialUpdateError:
      oneOf:
      - $ref: '#/components/schemas/AccountPhoneNumberPartialUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/AccountPhoneNumberPartialUpdatePhoneNumberErrorComponent'
      - $ref: '#/components/schemas/AccountPhoneNumberPartialUpdateOtpErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/AccountPhoneNumberPartialUpdateNonFieldErrorsErrorComponent'
          phone_number: '#/components/schemas/AccountPhoneNumberPartialUpdatePhoneNumberErrorComponent'
          otp: '#/components/schemas/AccountPhoneNumberPartialUpdateOtpErrorComponent'
    AccountPhoneNumberPartialUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/AccountPhoneNumberPartialUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/AccountPhoneNumberPartialUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    AccountPhoneNumberPartialUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    AccountPhoneNumberPartialUpdateOtpErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - otp
          type: string
          description: '* `otp` - otp'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    AccountPhoneNumberPartialUpdatePhoneNumberErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - phone_number
          type: string
          description: '* `phone_number` - phone_number'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    AccountPhoneNumberPartialUpdateValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/AccountPhoneNumberPartialUpdateError'
      required:
      - errors
      - type
    AccountRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    AccountSuggestUsernameRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    AccountUpdateAvatarErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - avatar
          type: string
          description: '* `avatar` - avatar'
        code:
          enum:
          - empty
          - invalid
          - invalid_image
          - max_length
          - no_name
          - 'null'
          type: string
          description: |-
            * `empty` - empty
            * `invalid` - invalid
            * `invalid_image` - invalid_image
            * `max_length` - max_length
            * `no_name` - no_name
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    AccountUpdateError:
      oneOf:
      - $ref: '#/components/schemas/AccountUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/AccountUpdateUsernameErrorComponent'
      - $ref: '#/components/schemas/AccountUpdateNameErrorComponent'
      - $ref: '#/components/schemas/AccountUpdateGenderErrorComponent'
      - $ref: '#/components/schemas/AccountUpdateAvatarErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/AccountUpdateNonFieldErrorsErrorComponent'
          username: '#/components/schemas/AccountUpdateUsernameErrorComponent'
          name: '#/components/schemas/AccountUpdateNameErrorComponent'
          gender: '#/components/schemas/AccountUpdateGenderErrorComponent'
          avatar: '#/components/schemas/AccountUpdateAvatarErrorComponent'
    AccountUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/AccountUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/AccountUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    AccountUpdateGenderErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - gender
          type: string
          description: '* `gender` - gender'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    AccountUpdateNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    AccountUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    AccountUpdateUsernameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - username
          type: string
          description: '* `username` - username'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    AccountUpdateValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/AccountUpdateError'
      required:
      - errors
      - type
    AuthTokenLoginCreateError:
      oneOf:
      - $ref: '#/components/schemas/AuthTokenLoginCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/AuthTokenLoginCreateTokenErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/AuthTokenLoginCreateNonFieldErrorsErrorComponent'
          token: '#/components/schemas/AuthTokenLoginCreateTokenErrorComponent'
    AuthTokenLoginCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/AuthTokenLoginCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/AuthTokenLoginCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    AuthTokenLoginCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    AuthTokenLoginCreateTokenErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - token
          type: string
          description: '* `token` - token'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    AuthTokenLoginCreateValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/AuthTokenLoginCreateError'
      required:
      - errors
      - type
    AuthTokenSseRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    Challenge:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Title of the challenge.
          maxLength: 50
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          description: |-
            Status of the challenge.

            * `active` - Active
            * `completed` - Completed
            * `failed` - Failed
        repeat_type:
          allOf:
          - $ref: '#/components/schemas/RepeatTypeEnum'
          description: |-
            How often the challenge repeats.

            * `O` - One time Only
            * `D` - Daily
            * `W` - Weekly
            * `M` - Monthly
        is_pinned:
          type: boolean
          description: Whether the challenge is pinned.
        due_date:
          type: string
          format: date-time
          nullable: true
          description: Due date to complete the challenge.
        difficulty:
          $ref: '#/components/schemas/ChallengeDifficulty'
        order:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          description: Priority order of the challenge.
      required:
      - difficulty
      - id
      - title
    ChallengeActivities:
      type: object
      properties:
        total:
          type: integer
        failed:
          type: integer
        completed:
          $ref: '#/components/schemas/CompletedChallengeActivities'
      required:
      - completed
      - failed
      - total
    ChallengeDifficulty:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          readOnly: true
          description: The display name of the difficulty level.
        slug:
          type: string
          readOnly: true
          description: The slugyfied version of the difficulty name.
          pattern: ^[-a-zA-Z0-9_]+$
        light_color:
          type: string
          readOnly: true
          title: Ligth Color
          description: The display color for ligth theme.
        dark_color:
          type: string
          readOnly: true
          description: The display color for dark theme.
        xp_value:
          type: integer
          readOnly: true
          description: Number of xp value associated with this difficulty level.
        xp_penalty:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: The amount of XP deducted whena challenge of this difficulty
            is failed.
      required:
      - dark_color
      - id
      - light_color
      - name
      - slug
      - xp_penalty
      - xp_value
    ChallengeDifficultyCount:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        challenge_count:
          type: integer
        name:
          type: string
          description: The display name of the difficulty level.
          maxLength: 30
        slug:
          type: string
          description: The slugyfied version of the difficulty name.
          maxLength: 30
          pattern: ^[-a-zA-Z0-9_]+$
        light_color:
          type: string
          title: Ligth Color
          description: The display color for ligth theme.
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          maxLength: 25
        dark_color:
          type: string
          description: The display color for dark theme.
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          maxLength: 25
        xp_value:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Number of xp value associated with this difficulty level.
        xp_penalty:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: The amount of XP deducted whena challenge of this difficulty
            is failed.
      required:
      - challenge_count
      - id
      - name
      - slug
      - xp_penalty
      - xp_value
    ChallengeStep:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Title of the step.
          maxLength: 50
        is_completed:
          type: boolean
          title: Completed
          description: Whether the step is completed.
        order:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          description: Priority order of the step.
      required:
      - id
      - title
    ChallengesActivitiesRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ChallengesCreateDifficultyIdErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - difficulty.id
          type: string
          description: '* `difficulty.id` - difficulty.id'
        code:
          enum:
          - invalid
          - max_string_length
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesCreateDifficultyNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - difficulty.non_field_errors
          type: string
          description: '* `difficulty.non_field_errors` - difficulty.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesCreateDifficultyXpPenaltyErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - difficulty.xp_penalty
          type: string
          description: '* `difficulty.xp_penalty` - difficulty.xp_penalty'
        code:
          enum:
          - invalid
          - max_string_length
          - max_value
          - min_value
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `max_value` - max_value
            * `min_value` - min_value
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesCreateDueDateErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - due_date
          type: string
          description: '* `due_date` - due_date'
        code:
          enum:
          - date
          - invalid
          - make_aware
          - overflow
          type: string
          description: |-
            * `date` - date
            * `invalid` - invalid
            * `make_aware` - make_aware
            * `overflow` - overflow
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesCreateError:
      oneOf:
      - $ref: '#/components/schemas/ChallengesCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ChallengesCreateTitleErrorComponent'
      - $ref: '#/components/schemas/ChallengesCreateStatusErrorComponent'
      - $ref: '#/components/schemas/ChallengesCreateRepeatTypeErrorComponent'
      - $ref: '#/components/schemas/ChallengesCreateIsPinnedErrorComponent'
      - $ref: '#/components/schemas/ChallengesCreateDueDateErrorComponent'
      - $ref: '#/components/schemas/ChallengesCreateDifficultyNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ChallengesCreateDifficultyIdErrorComponent'
      - $ref: '#/components/schemas/ChallengesCreateDifficultyXpPenaltyErrorComponent'
      - $ref: '#/components/schemas/ChallengesCreateOrderErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/ChallengesCreateNonFieldErrorsErrorComponent'
          title: '#/components/schemas/ChallengesCreateTitleErrorComponent'
          status: '#/components/schemas/ChallengesCreateStatusErrorComponent'
          repeat_type: '#/components/schemas/ChallengesCreateRepeatTypeErrorComponent'
          is_pinned: '#/components/schemas/ChallengesCreateIsPinnedErrorComponent'
          due_date: '#/components/schemas/ChallengesCreateDueDateErrorComponent'
          difficulty.non_field_errors: '#/components/schemas/ChallengesCreateDifficultyNonFieldErrorsErrorComponent'
          difficulty.id: '#/components/schemas/ChallengesCreateDifficultyIdErrorComponent'
          difficulty.xp_penalty: '#/components/schemas/ChallengesCreateDifficultyXpPenaltyErrorComponent'
          order: '#/components/schemas/ChallengesCreateOrderErrorComponent'
    ChallengesCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ChallengesCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ChallengesCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ChallengesCreateIsPinnedErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - is_pinned
          type: string
          description: '* `is_pinned` - is_pinned'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesCreateOrderErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - order
          type: string
          description: '* `order` - order'
        code:
          enum:
          - invalid
          - max_string_length
          - max_value
          - min_value
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `max_value` - max_value
            * `min_value` - min_value
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesCreateRepeatTypeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - repeat_type
          type: string
          description: '* `repeat_type` - repeat_type'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesCreateStatusErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - status
          type: string
          description: '* `status` - status'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesCreateTitleErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - title
          type: string
          description: '* `title` - title'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesCreateValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ChallengesCreateError'
      required:
      - errors
      - type
    ChallengesDestroyErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ChallengesListDifficultyErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - difficulty
          type: string
          description: '* `difficulty` - difficulty'
        code:
          enum:
          - invalid_choice
          type: string
          description: '* `invalid_choice` - invalid_choice'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesListError:
      oneOf:
      - $ref: '#/components/schemas/ChallengesListDifficultyErrorComponent'
      - $ref: '#/components/schemas/ChallengesListRepeatTypeErrorComponent'
      - $ref: '#/components/schemas/ChallengesListOrderingErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          difficulty: '#/components/schemas/ChallengesListDifficultyErrorComponent'
          repeat_type: '#/components/schemas/ChallengesListRepeatTypeErrorComponent'
          ordering: '#/components/schemas/ChallengesListOrderingErrorComponent'
    ChallengesListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ChallengesListValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ChallengesListValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ChallengesListOrderingErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - ordering
          type: string
          description: '* `ordering` - ordering'
        code:
          enum:
          - invalid_choice
          type: string
          description: '* `invalid_choice` - invalid_choice'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesListRepeatTypeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - repeat_type
          type: string
          description: '* `repeat_type` - repeat_type'
        code:
          enum:
          - invalid_choice
          type: string
          description: '* `invalid_choice` - invalid_choice'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesListValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ChallengesListError'
      required:
      - errors
      - type
    ChallengesOrderPartialUpdateError:
      oneOf:
      - $ref: '#/components/schemas/ChallengesOrderPartialUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ChallengesOrderPartialUpdateINDEXNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ChallengesOrderPartialUpdateINDEXIdErrorComponent'
      - $ref: '#/components/schemas/ChallengesOrderPartialUpdateINDEXOrderErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/ChallengesOrderPartialUpdateNonFieldErrorsErrorComponent'
          INDEX.non_field_errors: '#/components/schemas/ChallengesOrderPartialUpdateINDEXNonFieldErrorsErrorComponent'
          INDEX.id: '#/components/schemas/ChallengesOrderPartialUpdateINDEXIdErrorComponent'
          INDEX.order: '#/components/schemas/ChallengesOrderPartialUpdateINDEXOrderErrorComponent'
    ChallengesOrderPartialUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ChallengesOrderPartialUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ChallengesOrderPartialUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ChallengesOrderPartialUpdateINDEXIdErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - INDEX.id
          type: string
          description: '* `INDEX.id` - INDEX.id'
        code:
          enum:
          - invalid
          - max_string_length
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesOrderPartialUpdateINDEXNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - INDEX.non_field_errors
          type: string
          description: '* `INDEX.non_field_errors` - INDEX.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesOrderPartialUpdateINDEXOrderErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - INDEX.order
          type: string
          description: '* `INDEX.order` - INDEX.order'
        code:
          enum:
          - invalid
          - max_string_length
          - min_value
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `min_value` - min_value
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesOrderPartialUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - not_a_list
          type: string
          description: '* `not_a_list` - not_a_list'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesOrderPartialUpdateValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ChallengesOrderPartialUpdateError'
      required:
      - errors
      - type
    ChallengesPartialUpdateDifficultyIdErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - difficulty.id
          type: string
          description: '* `difficulty.id` - difficulty.id'
        code:
          enum:
          - invalid
          - max_string_length
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesPartialUpdateDifficultyNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - difficulty.non_field_errors
          type: string
          description: '* `difficulty.non_field_errors` - difficulty.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesPartialUpdateDifficultyXpPenaltyErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - difficulty.xp_penalty
          type: string
          description: '* `difficulty.xp_penalty` - difficulty.xp_penalty'
        code:
          enum:
          - invalid
          - max_string_length
          - max_value
          - min_value
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `max_value` - max_value
            * `min_value` - min_value
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesPartialUpdateDueDateErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - due_date
          type: string
          description: '* `due_date` - due_date'
        code:
          enum:
          - date
          - invalid
          - make_aware
          - overflow
          type: string
          description: |-
            * `date` - date
            * `invalid` - invalid
            * `make_aware` - make_aware
            * `overflow` - overflow
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesPartialUpdateError:
      oneOf:
      - $ref: '#/components/schemas/ChallengesPartialUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ChallengesPartialUpdateTitleErrorComponent'
      - $ref: '#/components/schemas/ChallengesPartialUpdateStatusErrorComponent'
      - $ref: '#/components/schemas/ChallengesPartialUpdateRepeatTypeErrorComponent'
      - $ref: '#/components/schemas/ChallengesPartialUpdateIsPinnedErrorComponent'
      - $ref: '#/components/schemas/ChallengesPartialUpdateDueDateErrorComponent'
      - $ref: '#/components/schemas/ChallengesPartialUpdateDifficultyNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ChallengesPartialUpdateDifficultyIdErrorComponent'
      - $ref: '#/components/schemas/ChallengesPartialUpdateDifficultyXpPenaltyErrorComponent'
      - $ref: '#/components/schemas/ChallengesPartialUpdateOrderErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/ChallengesPartialUpdateNonFieldErrorsErrorComponent'
          title: '#/components/schemas/ChallengesPartialUpdateTitleErrorComponent'
          status: '#/components/schemas/ChallengesPartialUpdateStatusErrorComponent'
          repeat_type: '#/components/schemas/ChallengesPartialUpdateRepeatTypeErrorComponent'
          is_pinned: '#/components/schemas/ChallengesPartialUpdateIsPinnedErrorComponent'
          due_date: '#/components/schemas/ChallengesPartialUpdateDueDateErrorComponent'
          difficulty.non_field_errors: '#/components/schemas/ChallengesPartialUpdateDifficultyNonFieldErrorsErrorComponent'
          difficulty.id: '#/components/schemas/ChallengesPartialUpdateDifficultyIdErrorComponent'
          difficulty.xp_penalty: '#/components/schemas/ChallengesPartialUpdateDifficultyXpPenaltyErrorComponent'
          order: '#/components/schemas/ChallengesPartialUpdateOrderErrorComponent'
    ChallengesPartialUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ChallengesPartialUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ChallengesPartialUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ChallengesPartialUpdateIsPinnedErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - is_pinned
          type: string
          description: '* `is_pinned` - is_pinned'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesPartialUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesPartialUpdateOrderErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - order
          type: string
          description: '* `order` - order'
        code:
          enum:
          - invalid
          - max_string_length
          - max_value
          - min_value
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `max_value` - max_value
            * `min_value` - min_value
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesPartialUpdateRepeatTypeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - repeat_type
          type: string
          description: '* `repeat_type` - repeat_type'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesPartialUpdateStatusErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - status
          type: string
          description: '* `status` - status'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesPartialUpdateTitleErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - title
          type: string
          description: '* `title` - title'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesPartialUpdateValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ChallengesPartialUpdateError'
      required:
      - errors
      - type
    ChallengesRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ChallengesStepsCreateError:
      oneOf:
      - $ref: '#/components/schemas/ChallengesStepsCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ChallengesStepsCreateTitleErrorComponent'
      - $ref: '#/components/schemas/ChallengesStepsCreateIsCompletedErrorComponent'
      - $ref: '#/components/schemas/ChallengesStepsCreateOrderErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/ChallengesStepsCreateNonFieldErrorsErrorComponent'
          title: '#/components/schemas/ChallengesStepsCreateTitleErrorComponent'
          is_completed: '#/components/schemas/ChallengesStepsCreateIsCompletedErrorComponent'
          order: '#/components/schemas/ChallengesStepsCreateOrderErrorComponent'
    ChallengesStepsCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ChallengesStepsCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ChallengesStepsCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ChallengesStepsCreateIsCompletedErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - is_completed
          type: string
          description: '* `is_completed` - is_completed'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesStepsCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesStepsCreateOrderErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - order
          type: string
          description: '* `order` - order'
        code:
          enum:
          - invalid
          - max_string_length
          - max_value
          - min_value
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `max_value` - max_value
            * `min_value` - min_value
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesStepsCreateTitleErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - title
          type: string
          description: '* `title` - title'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesStepsCreateValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ChallengesStepsCreateError'
      required:
      - errors
      - type
    ChallengesStepsDestroyErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ChallengesStepsGenerationCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ChallengesStepsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ChallengesStepsOrderPartialUpdateError:
      oneOf:
      - $ref: '#/components/schemas/ChallengesStepsOrderPartialUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ChallengesStepsOrderPartialUpdateINDEXNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ChallengesStepsOrderPartialUpdateINDEXIdErrorComponent'
      - $ref: '#/components/schemas/ChallengesStepsOrderPartialUpdateINDEXOrderErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/ChallengesStepsOrderPartialUpdateNonFieldErrorsErrorComponent'
          INDEX.non_field_errors: '#/components/schemas/ChallengesStepsOrderPartialUpdateINDEXNonFieldErrorsErrorComponent'
          INDEX.id: '#/components/schemas/ChallengesStepsOrderPartialUpdateINDEXIdErrorComponent'
          INDEX.order: '#/components/schemas/ChallengesStepsOrderPartialUpdateINDEXOrderErrorComponent'
    ChallengesStepsOrderPartialUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ChallengesStepsOrderPartialUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ChallengesStepsOrderPartialUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ChallengesStepsOrderPartialUpdateINDEXIdErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - INDEX.id
          type: string
          description: '* `INDEX.id` - INDEX.id'
        code:
          enum:
          - invalid
          - max_string_length
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesStepsOrderPartialUpdateINDEXNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - INDEX.non_field_errors
          type: string
          description: '* `INDEX.non_field_errors` - INDEX.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesStepsOrderPartialUpdateINDEXOrderErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - INDEX.order
          type: string
          description: '* `INDEX.order` - INDEX.order'
        code:
          enum:
          - invalid
          - max_string_length
          - min_value
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `min_value` - min_value
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesStepsOrderPartialUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - not_a_list
          type: string
          description: '* `not_a_list` - not_a_list'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesStepsOrderPartialUpdateValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ChallengesStepsOrderPartialUpdateError'
      required:
      - errors
      - type
    ChallengesStepsPartialUpdateError:
      oneOf:
      - $ref: '#/components/schemas/ChallengesStepsPartialUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ChallengesStepsPartialUpdateTitleErrorComponent'
      - $ref: '#/components/schemas/ChallengesStepsPartialUpdateIsCompletedErrorComponent'
      - $ref: '#/components/schemas/ChallengesStepsPartialUpdateOrderErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/ChallengesStepsPartialUpdateNonFieldErrorsErrorComponent'
          title: '#/components/schemas/ChallengesStepsPartialUpdateTitleErrorComponent'
          is_completed: '#/components/schemas/ChallengesStepsPartialUpdateIsCompletedErrorComponent'
          order: '#/components/schemas/ChallengesStepsPartialUpdateOrderErrorComponent'
    ChallengesStepsPartialUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ChallengesStepsPartialUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ChallengesStepsPartialUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ChallengesStepsPartialUpdateIsCompletedErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - is_completed
          type: string
          description: '* `is_completed` - is_completed'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesStepsPartialUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesStepsPartialUpdateOrderErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - order
          type: string
          description: '* `order` - order'
        code:
          enum:
          - invalid
          - max_string_length
          - max_value
          - min_value
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `max_value` - max_value
            * `min_value` - min_value
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesStepsPartialUpdateTitleErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - title
          type: string
          description: '* `title` - title'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesStepsPartialUpdateValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ChallengesStepsPartialUpdateError'
      required:
      - errors
      - type
    ChallengesStepsRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ChallengesStepsUpdateError:
      oneOf:
      - $ref: '#/components/schemas/ChallengesStepsUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ChallengesStepsUpdateTitleErrorComponent'
      - $ref: '#/components/schemas/ChallengesStepsUpdateIsCompletedErrorComponent'
      - $ref: '#/components/schemas/ChallengesStepsUpdateOrderErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/ChallengesStepsUpdateNonFieldErrorsErrorComponent'
          title: '#/components/schemas/ChallengesStepsUpdateTitleErrorComponent'
          is_completed: '#/components/schemas/ChallengesStepsUpdateIsCompletedErrorComponent'
          order: '#/components/schemas/ChallengesStepsUpdateOrderErrorComponent'
    ChallengesStepsUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ChallengesStepsUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ChallengesStepsUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ChallengesStepsUpdateIsCompletedErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - is_completed
          type: string
          description: '* `is_completed` - is_completed'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesStepsUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesStepsUpdateOrderErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - order
          type: string
          description: '* `order` - order'
        code:
          enum:
          - invalid
          - max_string_length
          - max_value
          - min_value
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `max_value` - max_value
            * `min_value` - min_value
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesStepsUpdateTitleErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - title
          type: string
          description: '* `title` - title'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesStepsUpdateValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ChallengesStepsUpdateError'
      required:
      - errors
      - type
    ChallengesUpdateDifficultyIdErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - difficulty.id
          type: string
          description: '* `difficulty.id` - difficulty.id'
        code:
          enum:
          - invalid
          - max_string_length
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesUpdateDifficultyNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - difficulty.non_field_errors
          type: string
          description: '* `difficulty.non_field_errors` - difficulty.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesUpdateDifficultyXpPenaltyErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - difficulty.xp_penalty
          type: string
          description: '* `difficulty.xp_penalty` - difficulty.xp_penalty'
        code:
          enum:
          - invalid
          - max_string_length
          - max_value
          - min_value
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `max_value` - max_value
            * `min_value` - min_value
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesUpdateDueDateErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - due_date
          type: string
          description: '* `due_date` - due_date'
        code:
          enum:
          - date
          - invalid
          - make_aware
          - overflow
          type: string
          description: |-
            * `date` - date
            * `invalid` - invalid
            * `make_aware` - make_aware
            * `overflow` - overflow
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesUpdateError:
      oneOf:
      - $ref: '#/components/schemas/ChallengesUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ChallengesUpdateTitleErrorComponent'
      - $ref: '#/components/schemas/ChallengesUpdateStatusErrorComponent'
      - $ref: '#/components/schemas/ChallengesUpdateRepeatTypeErrorComponent'
      - $ref: '#/components/schemas/ChallengesUpdateIsPinnedErrorComponent'
      - $ref: '#/components/schemas/ChallengesUpdateDueDateErrorComponent'
      - $ref: '#/components/schemas/ChallengesUpdateDifficultyNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ChallengesUpdateDifficultyIdErrorComponent'
      - $ref: '#/components/schemas/ChallengesUpdateDifficultyXpPenaltyErrorComponent'
      - $ref: '#/components/schemas/ChallengesUpdateOrderErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/ChallengesUpdateNonFieldErrorsErrorComponent'
          title: '#/components/schemas/ChallengesUpdateTitleErrorComponent'
          status: '#/components/schemas/ChallengesUpdateStatusErrorComponent'
          repeat_type: '#/components/schemas/ChallengesUpdateRepeatTypeErrorComponent'
          is_pinned: '#/components/schemas/ChallengesUpdateIsPinnedErrorComponent'
          due_date: '#/components/schemas/ChallengesUpdateDueDateErrorComponent'
          difficulty.non_field_errors: '#/components/schemas/ChallengesUpdateDifficultyNonFieldErrorsErrorComponent'
          difficulty.id: '#/components/schemas/ChallengesUpdateDifficultyIdErrorComponent'
          difficulty.xp_penalty: '#/components/schemas/ChallengesUpdateDifficultyXpPenaltyErrorComponent'
          order: '#/components/schemas/ChallengesUpdateOrderErrorComponent'
    ChallengesUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ChallengesUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ChallengesUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ChallengesUpdateIsPinnedErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - is_pinned
          type: string
          description: '* `is_pinned` - is_pinned'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesUpdateOrderErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - order
          type: string
          description: '* `order` - order'
        code:
          enum:
          - invalid
          - max_string_length
          - max_value
          - min_value
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `max_value` - max_value
            * `min_value` - min_value
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesUpdateRepeatTypeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - repeat_type
          type: string
          description: '* `repeat_type` - repeat_type'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesUpdateStatusErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - status
          type: string
          description: '* `status` - status'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesUpdateTitleErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - title
          type: string
          description: '* `title` - title'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ChallengesUpdateValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ChallengesUpdateError'
      required:
      - errors
      - type
    ClientErrorEnum:
      enum:
      - client_error
      type: string
      description: '* `client_error` - Client Error'
    CompletedChallengeActivities:
      type: object
      properties:
        total:
          type: integer
        difficulties:
          type: array
          items:
            $ref: '#/components/schemas/ChallengeDifficultyCount'
      required:
      - difficulties
      - total
    DifficultiesListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    DifficultiesRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    Difficulty:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: The display name of the difficulty level.
          maxLength: 30
        slug:
          type: string
          description: The slugyfied version of the difficulty name.
          maxLength: 30
          pattern: ^[-a-zA-Z0-9_]+$
        light_color:
          type: string
          title: Ligth Color
          description: The display color for ligth theme.
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          maxLength: 25
        dark_color:
          type: string
          description: The display color for dark theme.
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          maxLength: 25
        xp_value:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Number of xp value associated with this difficulty level.
        xp_penalty:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: The amount of XP deducted whena challenge of this difficulty
            is failed.
      required:
      - id
      - name
      - slug
      - xp_penalty
      - xp_value
    Error401:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode401Enum'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    Error403:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode403Enum'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    Error404:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode404Enum'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    Error405:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode405Enum'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    Error406:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode406Enum'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    Error415:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode415Enum'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    Error500:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode500Enum'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    ErrorCode401Enum:
      enum:
      - authentication_failed
      - not_authenticated
      type: string
      description: |-
        * `authentication_failed` - Authentication Failed
        * `not_authenticated` - Not Authenticated
    ErrorCode403Enum:
      enum:
      - permission_denied
      type: string
      description: '* `permission_denied` - Permission Denied'
    ErrorCode404Enum:
      enum:
      - not_found
      type: string
      description: '* `not_found` - Not Found'
    ErrorCode405Enum:
      enum:
      - method_not_allowed
      type: string
      description: '* `method_not_allowed` - Method Not Allowed'
    ErrorCode406Enum:
      enum:
      - not_acceptable
      type: string
      description: '* `not_acceptable` - Not Acceptable'
    ErrorCode415Enum:
      enum:
      - unsupported_media_type
      type: string
      description: '* `unsupported_media_type` - Unsupported Media Type'
    ErrorCode500Enum:
      enum:
      - error
      type: string
      description: '* `error` - Error'
    ErrorResponse401:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClientErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error401'
      required:
      - errors
      - type
    ErrorResponse403:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClientErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error403'
      required:
      - errors
      - type
    ErrorResponse404:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClientErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error404'
      required:
      - errors
      - type
    ErrorResponse405:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClientErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error405'
      required:
      - errors
      - type
    ErrorResponse406:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClientErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error406'
      required:
      - errors
      - type
    ErrorResponse415:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClientErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error415'
      required:
      - errors
      - type
    ErrorResponse500:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ServerErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error500'
      required:
      - errors
      - type
    GenderEnum:
      enum:
      - M
      - F
      type: string
      description: |-
        * `M` - Male
        * `F` - Female
    LevelTitle:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: The title of the level
          maxLength: 50
        light_color:
          type: string
          title: Ligth Color
          description: The display color for ligth theme.
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          maxLength: 25
        dark_color:
          type: string
          description: The display color for dark theme.
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          maxLength: 25
      required:
      - id
      - title
    LevelTitleList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: The title of the level
          maxLength: 50
        required_level:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Minimum level requirement to achieve the title
        light_color:
          type: string
          title: Ligth Color
          description: The display color for ligth theme.
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          maxLength: 25
        dark_color:
          type: string
          description: The display color for dark theme.
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          maxLength: 25
      required:
      - id
      - required_level
      - title
    LevelTitlesListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    LoginTokenSSE:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    PaginatedChallengeList:
      type: object
      required:
      - count
      - results
      properties:
        meta:
          type: object
          properties:
            count:
              type: integer
              example: 123
            next:
              type: string
              nullable: true
              format: uri
              example: http://api.example.org/accounts/?offset=400&limit=100
            previous:
              type: string
              nullable: true
              format: uri
              example: http://api.example.org/accounts/?offset=200&limit=100
            difficulties:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  challenge_count:
                    type: integer
                  name:
                    type: string
                  slug:
                    type: string
                  light_color:
                    type: string
                  dark_color:
                    type: string
                  xp_value:
                    type: integer
        results:
          type: array
          items:
            $ref: '#/components/schemas/Challenge'
    PaginatedRecentUserSearchListList:
      type: object
      required:
      - results
      properties:
        meta:
          type: object
          properties:
            next:
              type: string
              nullable: true
              format: uri
              example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
            previous:
              type: string
              nullable: true
              format: uri
              example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/RecentUserSearchList'
    PaginatedUserListList:
      type: object
      required:
      - results
      properties:
        meta:
          type: object
          properties:
            next:
              type: string
              nullable: true
              format: uri
              example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
            previous:
              type: string
              nullable: true
              format: uri
              example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserList'
    ParseError:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ParseErrorCodeEnum'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    ParseErrorCodeEnum:
      enum:
      - parse_error
      type: string
      description: '* `parse_error` - Parse Error'
    ParseErrorResponse:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClientErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ParseError'
      required:
      - errors
      - type
    PatchedChallenge:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Title of the challenge.
          maxLength: 50
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          description: |-
            Status of the challenge.

            * `active` - Active
            * `completed` - Completed
            * `failed` - Failed
        repeat_type:
          allOf:
          - $ref: '#/components/schemas/RepeatTypeEnum'
          description: |-
            How often the challenge repeats.

            * `O` - One time Only
            * `D` - Daily
            * `W` - Weekly
            * `M` - Monthly
        is_pinned:
          type: boolean
          description: Whether the challenge is pinned.
        due_date:
          type: string
          format: date-time
          nullable: true
          description: Due date to complete the challenge.
        difficulty:
          $ref: '#/components/schemas/ChallengeDifficulty'
        order:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          description: Priority order of the challenge.
    PatchedChallengeStep:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Title of the step.
          maxLength: 50
        is_completed:
          type: boolean
          title: Completed
          description: Whether the step is completed.
        order:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          description: Priority order of the step.
    PatchedPhoneNumber:
      type: object
      properties:
        phone_number:
          type: string
          description: Phone number of the user
          maxLength: 128
        otp:
          type: string
    PatchedProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        is_email_verified:
          type: boolean
          readOnly: true
        username:
          type: string
          description: Required. 35 characters or fewer.Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 35
        name:
          type: string
          description: Name of the user
          maxLength: 255
        gender:
          allOf:
          - $ref: '#/components/schemas/GenderEnum'
          description: |-
            Gender of the user

            * `M` - Male
            * `F` - Female
        phone_number:
          type: string
          readOnly: true
          description: Phone number of the user
        avatar:
          type: string
          format: uri
          writeOnly: true
          description: Avatar (or profile pic) of the user
        date_joined:
          type: string
          format: date-time
          readOnly: true
        is_superuser:
          type: boolean
          readOnly: true
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        is_staff:
          type: boolean
          readOnly: true
          title: Staff status
          description: Designates whether the user can log into this admin site.
        total_xp:
          type: integer
          readOnly: true
          description: Total xp points of the user
        level:
          type: integer
          readOnly: true
        level_title:
          allOf:
          - $ref: '#/components/schemas/LevelTitle'
          readOnly: true
        rank:
          type: integer
          readOnly: true
          description: Global rank of the user
        links:
          allOf:
          - $ref: '#/components/schemas/UserAvatarLink'
          readOnly: true
    Profile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        is_email_verified:
          type: boolean
          readOnly: true
        username:
          type: string
          description: Required. 35 characters or fewer.Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 35
        name:
          type: string
          description: Name of the user
          maxLength: 255
        gender:
          allOf:
          - $ref: '#/components/schemas/GenderEnum'
          description: |-
            Gender of the user

            * `M` - Male
            * `F` - Female
        phone_number:
          type: string
          readOnly: true
          description: Phone number of the user
        avatar:
          type: string
          format: uri
          writeOnly: true
          description: Avatar (or profile pic) of the user
        date_joined:
          type: string
          format: date-time
          readOnly: true
        is_superuser:
          type: boolean
          readOnly: true
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        is_staff:
          type: boolean
          readOnly: true
          title: Staff status
          description: Designates whether the user can log into this admin site.
        total_xp:
          type: integer
          readOnly: true
          description: Total xp points of the user
        level:
          type: integer
          readOnly: true
        level_title:
          allOf:
          - $ref: '#/components/schemas/LevelTitle'
          readOnly: true
        rank:
          type: integer
          readOnly: true
          description: Global rank of the user
      required:
      - date_joined
      - email
      - id
      - is_email_verified
      - is_staff
      - is_superuser
      - level
      - level_title
      - links
      - phone_number
      - rank
      - total_xp
      - username
    ReOrdering:
      type: object
      properties:
        id:
          type: integer
        order:
          type: integer
          minimum: 0
      required:
      - id
      - order
    RecentSearchesDestroyAllErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    RecentSearchesDestroyErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    RecentSearchesListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    RecentUserSearchList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        searched_user:
          $ref: '#/components/schemas/UserDetails'
      required:
      - id
      - searched_user
    RepeatTypeEnum:
      enum:
      - O
      - D
      - W
      - M
      type: string
      description: |-
        * `O` - One time Only
        * `D` - Daily
        * `W` - Weekly
        * `M` - Monthly
    ServerErrorEnum:
      enum:
      - server_error
      type: string
      description: '* `server_error` - Server Error'
    StandardResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
      required:
      - message
      - success
    StatusEnum:
      enum:
      - active
      - completed
      - failed
      type: string
      description: |-
        * `active` - Active
        * `completed` - Completed
        * `failed` - Failed
    SuggestUsername:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          type: array
          items:
            type: string
      required:
      - data
      - message
      - success
    TokenLogin:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    UserAvatarLink:
      type: object
      properties:
        avatar:
          type: string
          format: uri
          nullable: true
      required:
      - avatar
    UserDetails:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 35 characters or fewer.Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 35
        name:
          type: string
          description: Name of the user
          maxLength: 255
        gender:
          allOf:
          - $ref: '#/components/schemas/GenderEnum'
          description: |-
            Gender of the user

            * `M` - Male
            * `F` - Female
        avatar:
          type: string
          format: uri
          description: Avatar (or profile pic) of the user
        date_joined:
          type: string
          format: date-time
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        total_xp:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Total xp points of the user
        level:
          type: integer
          readOnly: true
        level_title:
          $ref: '#/components/schemas/LevelTitle'
        rank:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Global rank of the user
      required:
      - id
      - level
      - level_title
      - links
      - rank
      - username
    UserList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Name of the user
          maxLength: 255
        username:
          type: string
          description: Required. 35 characters or fewer.Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 35
        level:
          type: integer
          readOnly: true
        level_title:
          $ref: '#/components/schemas/LevelTitle'
        links:
          allOf:
          - $ref: '#/components/schemas/UserListLinks'
          readOnly: true
      required:
      - id
      - level
      - level_title
      - links
      - username
    UserListLinks:
      type: object
      properties:
        self:
          type: string
          format: uri
        avatar:
          type: string
          format: uri
          nullable: true
      required:
      - avatar
      - self
    UsersDestroyErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    UsersListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    UsersRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ValidationErrorEnum:
      enum:
      - validation_error
      type: string
      description: '* `validation_error` - Validation Error'
  securitySchemes:
    knoxApiToken:
      type: http
      scheme: bearer
externalDocs:
  url: https://allauth.org/docs/draft-api
  description: Authentication
